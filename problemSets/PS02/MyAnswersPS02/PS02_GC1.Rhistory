install.packages("tidyverse")
install.packages("readr")
{
"cells": [
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"# Assignment 1: Python Basics\n",
"\n",
"## POP77001 Computer Programming for Social Scientists"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Before submission\n",
"\n",
"- Make sure that you can run all cells without errors\n",
"- You can do it by clicking `Kernel`, `Restart & Run All` in the menu above\n",
"- Make sure that you save the output by pressing Command+S / CTRL+S\n",
"- Rename the file from `01_assignment.ipynb` to `01_assignment_studentnumber_firstname_lastname.ipynb`"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Exercise 1: Slicing (20 points)\n",
"\n",
"Using only slicing operations create words 'dish', 'wash', 'he' and 'saw' out of the word 'dishwasher'. Finally, reverse the order of letters in the word (spell it backwards). Print the results."
]
},
{
"cell_type": "code",
"execution_count": 1,
"metadata": {},
"outputs": [],
"source": [
"# Exercise 1:\n",
"\n",
"dishwasher = 'dishwasher'\n",
"\n",
"# Your code goes here"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Exercise 2: String methods (20 points)\n",
"\n",
"Remove trailing whitespaces (before and after the sentence) in the string below. Replace all double whitespaces with one. Format it as a sentence with correct punctuation. Print the result."
]
},
{
"cell_type": "code",
"execution_count": 2,
"metadata": {},
"outputs": [],
"source": [
"# Exercise 2:\n",
"\n",
"s = \"   truth  can  only be  found in  one place:  the  code \"\n",
"\n",
"# Your code goes here"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Exercise 3: List methods (20 points)\n",
"\n",
"Below is a shuffled version of the first 11 elements of [Fibonacci sequence](https://en.wikipedia.org/wiki/Fibonacci_number). Create a copy of the shuffled list, remove the last element and sort it from smaller integers to larger. Select the second smallest and the third largest integers in the sequence. Print them out. Replace them in the list with the string, containing word corresponding to that number (e.g. 'two' for 2). Print out the results."
]
},
{
"cell_type": "code",
"execution_count": 3,
"metadata": {},
"outputs": [],
"source": [
"# Exercise 3:\n",
"\n",
"fib_shuffled = [34, 5, 3, 1, 13, 55, 21, 2, 8, 0, 1]\n",
"\n",
"# Your code goes here"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Exercise 4: Set methods (20 points)\n",
"\n",
"<div style=\"text-align: center;\">\n",
"    <img width=\"500\" height=\"300\" src=\"../imgs/europe_diagram.png\">\n",
"</div>\n",
"\n",
"Source: [Wikipedia](https://en.wikipedia.org/w/index.php?title=File:Supranational_European_Bodies-en.svg)\n",
"\n",
"Create a set called `visegrad`, which includes all the countries from the Visegrád Group. Create lists `baltic` and `benelux` with respective countries. Convert them into sets. Create a union of these states and countries from the Visegrád Group.\n",
"\n",
"Tip: If any flags are unfamiliar, check the interactive version of the diagram [here](https://upload.wikimedia.org/wikipedia/commons/1/1a/Supranational_European_Bodies-en.svg)"
]
},
{
"cell_type": "code",
"execution_count": 4,
"metadata": {},
"outputs": [],
"source": [
"# Exercise 4:\n",
"\n",
"# Your code goes here"
]
},
{
"cell_type": "markdown",
"metadata": {
"slideshow": {
"slide_type": "slide"
}
},
"source": [
"## Exercise 5: Library problem (20 points)\n",
"\n",
"Imagine you are tasked to help a local library organise their book catalogue. Users and librarians would need to be able to search by authors and by book titles, without always knowing both of those. For simplicity, let's assume that books in catalogues are organised by author (and not by book code).\n",
"\n",
"Describe in your own words what built-in data structure(s) in Python you would use to design such a system.\n",
"\n",
"Implement a mock-up of such system using a couple of author-book examples of your choice."
]
},
{
"cell_type": "code",
"execution_count": 5,
"metadata": {},
"outputs": [],
"source": [
"# Exercise 5:\n",
"\n",
"# Your text and code go here"
]
}
],
"metadata": {
"celltoolbar": "Slideshow",
"kernelspec": {
"display_name": "Python 3",
"language": "python",
"name": "python3"
},
"language_info": {
"codemirror_mode": {
"name": "ipython",
"version": 3
},
"file_extension": ".py",
"mimetype": "text/x-python",
"name": "python",
"nbconvert_exporter": "python",
"pygments_lexer": "ipython3",
"version": "3.8.10"
}
},
"nbformat": 4,
"nbformat_minor": 4
}
